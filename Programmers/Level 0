1. -- 두 수의 차 -- !

문제 설명
정수 num1과 num2가 주어질 때, num1에서 num2를 뺀 값을 return하도록 soltuion 함수를 완성해주세요.

제한사항
-50000 ≤ num1 ≤ 50000
-50000 ≤ num2 ≤ 50000
입출력 예
num1	num2	result
2	3	-1
100	2	98
입출력 예 설명
입출력 예 #1

num1이 2이고 num2가 3이므로 2 - 3 = -1을 return합니다.
입출력 예 #2

num1이 100이고 num2가 2이므로 100 - 2 = 98을 return합니다.

- 풀이 -

def solution(num1, num2):
    answer = num1 - num2;
    return answer

2. -- 숫자 비교하기 -- ?

문제 설명
정수 num1과 num2가 매개변수로 주어집니다. 두 수가 같으면 1 다르면 -1을 retrun하도록 solution 함수를 완성해주세요.

제한사항
0 ≤ num1 ≤ 10,000
0 ≤ num2 ≤ 10,000
입출력 예
num1	num2	result
2	3	-1
11	11	1
7	99	-1
입출력 예 설명
입출력 예 설명 #1

num1이 2이고 num2가 3이므로 다릅니다. 따라서 -1을 return합니다.
입출력 예 설명 #2

num1이 11이고 num2가 11이므로 같습니다. 따라서 1을 return합니다.
입출력 예 설명 #3

num1이 7이고 num2가 99이므로 다릅니다. 따라서 -1을 return합니다.

- 풀이 -

def solution(num1, num2):                  -> solution이라는 이름의 함수를 정의 / 매개변수로 num1, num2를 받음
    answer = 1 if num1 ==num2 else -1;     -> 값1 if 조건 else 값2 : 조건이 참이면 값1, 거짓이면 값2
    return answer

if num1 == num2:
    answer = 1
else:
    answer = -1 로 나타낼 수도 있음

3. -- 나이 출력 -- !

문제 설명
머쓱이는 선생님이 몇 년도에 태어났는지 궁금해졌습니다. 2022년 기준 선생님의 나이 age가 주어질 때, 선생님의 출생 연도를 return 하는 solution 함수를 완성해주세요

제한사항
0 < age ≤ 120
나이는 태어난 연도에 1살이며 매년 1월 1일마다 1살씩 증가합니다.
입출력 예
age	result
40	1983
23	2000
입출력 예 설명
입출력 예 #1

2022년 기준 40살이므로 1983년생입니다.
입출력 예 #2

2022년 기준 23살이므로 2000년생입니다.

- 풀이 -

def solution(age):
    answer = 2023-age;     -> 기준년도가 2022년이기 때문에 태어날 때부터 1살인 점을 감안해서 answer = 2022 - age + 1이 좀 더 명확함
    return answer


4. -- 나머지 구하기 -- !

문제 설명
정수 num1, num2가 매개변수로 주어질 때, num1를 num2로 나눈 나머지를 return 하도록 solution 함수를 완성해주세요.

제한사항
0 < num1 ≤ 100
0 < num2 ≤ 100
입출력 예
num1	num2	result
3	2	1
10	5	0
입출력 예 설명
입출력 예 #1

num1이 3, num2가 2이므로 3을 2로 나눈 나머지 1을 return 합니다.
입출력 예 #2

num1이 10, num2가 5이므로 10을 5로 나눈 나머지 0을 return 합니다.

- 풀이 -

def solution(num1, num2):     
    answer = num1%num2;       -> num1이 num2보다 작더라도 큰 수로 작을 수를 나눌 수 없기 때문에 num1 자체가 나머지가 됨
    return answer

5. -- 몫 구하기 -- ?

문제 설명
정수 num1, num2가 매개변수로 주어질 때, num1을 num2로 나눈 몫을 return 하도록 solution 함수를 완성해주세요.

제한사항
0 < num1 ≤ 100
0 < num2 ≤ 100
입출력 예
num1	num2	result
10	5	2
7	2	3
입출력 예 설명
입출력 예 #1

num1이 10, num2가 5이므로 10을 5로 나눈 몫 2를 return 합니다.
입출력 예 #2

num1이 7, num2가 2이므로 7을 2로 나눈 몫 3을 return 합니다.

- 풀이 - 

def solution(num1, num2):
    answer = num1//num2;      -> //는 몫만 구하는 연산자
    return answer

6. -- 두 수의 곱 -- !

문제 설명
정수 num1, num2가 매개변수 주어집니다. num1과 num2를 곱한 값을 return 하도록 solution 함수를 완성해주세요.

제한사항
0 ≤ num1 ≤ 100
0 ≤ num2 ≤ 100
입출력 예
num1	num2	result
3	4	12
27	19	513
입출력 예 설명
입출력 예 #1

num1이 3, num2가 4이므로 3 * 4 = 12를 return합니다.
입출력 예 #2

num1이 27, num2가 19이므로 27 * 19 = 513을 return합니다.

- 풀이 - 

def solution(num1, num2):
    answer = num1 * num2;
    return answer

7. -- 두 수의 합 -- !

문제 설명
정수 num1과 num2가 주어질 때, num1과 num2의 합을 return하도록 soltuion 함수를 완성해주세요.

제한사항
-50,000 ≤ num1 ≤ 50,000
-50,000 ≤ num2 ≤ 50,000
입출력 예
num1	num2	result
2	3	5
100	2	102
입출력 예 설명
입출력 예 #1

num1이 2이고 num2가 3이므로 2 + 3 = 5를 return합니다.
입출력 예 #2

num1이 100이고 num2가 2이므로 100 + 2 = 102를 return합니다.

- 풀이 - 

def solution(num1, num2):
    answer = num1 + num2;
    return answer


8. -- 두 수의 나눗셈 -- ?

문제 설명
정수 num1과 num2가 매개변수로 주어질 때, num1을 num2로 나눈 값에 1,000을 곱한 후 정수 부분을 return 하도록 soltuion 함수를 완성해주세요.

제한사항
0 < num1 ≤ 100
0 < num2 ≤ 100
입출력 예
num1	num2	result
3	2	1500
7	3	2333
1	16	62
입출력 예 설명
입출력 예 #1

num1이 3, num2가 2이므로 3 / 2 = 1.5에 1,000을 곱하면 1500이 됩니다.
입출력 예 #2

num1이 7, num2가 3이므로 7 / 3 = 2.33333...에 1,000을 곱하면 2333.3333.... 이 되며, 정수 부분은 2333입니다.
입출력 예 #3

num1이 1, num2가 16이므로 1 / 16 = 0.0625에 1,000을 곱하면 62.5가 되며, 정수 부분은 62입니다.

- 풀이 - 

def solution(num1, num2):
    answer = num1/num2 * 1000;     
    return int(answer)             -> 형변환을 할 때 앞에 형변환 함수를 쓰고 뒤에 ( )


9. -- 각도기 -- ?

문제 설명
각에서 0도 초과 90도 미만은 예각, 90도는 직각, 90도 초과 180도 미만은 둔각 180도는 평각으로 분류합니다. 각 angle이 매개변수로 주어질 때 예각일 때 1, 직각일 때 2, 둔각일 때 3, 평각일 때 4를 return하도록 solution 함수를 완성해주세요.

예각 : 0 < angle < 90
직각 : angle = 90
둔각 : 90 < angle < 180
평각 : angle = 180
제한사항
0 < angle ≤ 180
angle은 정수입니다.
입출력 예
angle	result
70	1
91	3
180	4
입출력 예 설명
입출력 예 #1

angle이 70이므로 예각입니다. 따라서 1을 return합니다.
입출력 예 #2

angle이 91이므로 둔각입니다. 따라서 3을 return합니다.
입출력 예 #2

angle이 180이므로 평각입니다. 따라서 4를 return합니다.

- 풀이 -

def solution(angle):
    answer = 0;
    if 0<angle<90:
        answer = 1
    elif angle == 90:      -> elif : else if의 줄임말 / 조건문에서 여러 개의 조건을 검사할 때 사용
        answer = 2
    elif 90<angle<180:     
        answer = 3
    elif angle == 180:     -> answer = 1 if 0 < angle < 90 else 2 if angle == 90 else 3 if 90 < angle < 180 else 4 로도 사용 가능
        answer = 4;
    return answer


10. -- 짝수의 합 -- ?

문제 설명
정수 n이 주어질 때, n이하의 짝수를 모두 더한 값을 return 하도록 solution 함수를 작성해주세요.

제한사항
0 < n ≤ 1000

입출력 예
n	result
10	30
4	6
입출력 예 설명
입출력 예 #1

n이 10이므로 2 + 4 + 6 + 8 + 10 = 30을 return 합니다.
입출력 예 #2

n이 4이므로 2 + 4 = 6을 return 합니다.

- 풀이 -

def solution(n):
    answer = 0
    for i in range(2, n+1, 2):     -> for문 : for i in range(시작값, 끝값, 증가값): / 시작값 <= i < 끝
        answer += i
    return answer

파이썬에서는 문장마다 ;(세미콜론)을 사용하지 않고 줄만 바꿔도 됨


11. -- 배열의 평균값 -- ?

문제 설명
정수 배열 numbers가 매개변수로 주어집니다. numbers의 원소의 평균값을 return하도록 solution 함수를 완성해주세요.

제한사항
0 ≤ numbers의 원소 ≤ 1,000
1 ≤ numbers의 길이 ≤ 100
정답의 소수 부분이 .0 또는 .5인 경우만 입력으로 주어집니다.
입출력 예
numbers	result
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]	5.5
[89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]	94.0
입출력 예 설명
입출력 예 #1

numbers의 원소들의 평균 값은 5.5입니다.
입출력 예 #2

numbers의 원소들의 평균 값은 94.0입니다.

- 풀이 -

def solution(numbers):
    answer = sum(numbers) / len(numbers)     -> sum(배열), len(배열)을 해도 바로 배열의 값들이 출력됨 (파이썬 내장함수)
    return answer

파이썬에서는 배열을 별로도 반복문을 사용해 원소로 나누거나 하지 않아도 됨


12. -- 
